USE OTC_PLATFORM
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE name = 'SP_CREATE_MODEL_D' AND type='P')
BEGIN
	DROP PROCEDURE SP_CREATE_MODEL_D
END
GO

CREATE PROCEDURE SP_CREATE_MODEL_D
(	
	@TABLE VARCHAR(80)
)
AS
BEGIN

	DECLARE @NAME VARCHAR(80) = 'SP' + SUBSTRING(@TABLE,3, LEN(@TABLE)) +'_D'
	DECLARE @SQL NVARCHAR(MAX)
	DECLARE @BR CHAR(2) = CHAR(13)
	DECLARE @TAB CHAR(2) = CHAR(9)

	DECLARE @ID							int
	DECLARE @COLUMN_NAME				sysname
	DECLARE @DATA_TYPE					nvarchar(256)
	DECLARE @CHARACTER_MAXIMUM_LENGTH	int
	DECLARE @NUMERIC_PRECISION			tinyint
	DECLARE @NUMERIC_SCALE				int
	DECLARE @IS_NULLABLE				varchar(3)
	DECLARE @PK_NAME					varchar(100)
		
	SET NOCOUNT ON

	SELECT 
		@PK_NAME = B.COLUMN_NAME
		--B.TABLE_CATALOG,
		--B.TABLE_SCHEMA,
		--B.TABLE_NAME,
		--B.COLUMN_NAME
	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS A

	INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE B
	ON A.CONSTRAINT_TYPE = 'PRIMARY KEY' 
	AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME

	WHERE B.TABLE_NAME = @TABLE

	-- Set the database
	SET @SQL = ' USE ' + DB_NAME() + @BR
	SET @SQL+= 'GO' + @BR + @BR
	
	-- Delete the previous procedure version
	SET @SQL+= 'IF EXISTS(SELECT NAME FROM sys.objects WHERE name = ''' + @NAME + ''' AND type=''P'')' + @BR
	SET @SQL+= 'BEGIN' + @BR
		SET @SQL+= @TAB + 'DROP PROCEDURE '+ @NAME +'' + @BR
	SET @SQL+= 'END' + @BR
	SET @SQL+= 'GO' + @BR + @BR
	
	-- Create procedure statement
	SET @SQL+='CREATE PROCEDURE '+ @NAME +''  + @BR
	SET @SQL+='(' + @BR
	SET @SQL+= @TAB + '@P_' + @PK_NAME + '  int' + @BR		
	SET @SQL+=')' + @BR
	SET @SQL+='AS BEGIN' + @BR + @BR
	SET @SQL+=@TAB + 'DELETE FROM ' + @TABLE + @BR
	SET @SQL+=@TAB + 'WHERE '+ @PK_NAME + ' = @P_' + @PK_NAME + @BR
	SET @SQL+='END' + @BR
	SET @SQL+='GO' + @BR + @BR

	-- Grant execute statement
	SET @SQL+='GRANT EXECUTE ON '+ @NAME +' TO PUBLIC' + @BR
	SET @SQL+='GO' + @BR

	PRINT @SQL
	   	     
	END
GO

GRANT EXECUTE ON SP_CREATE_MODEL_D TO PUBLIC
GO
